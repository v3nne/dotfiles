#####################
### SANE DEFAULTS ###
#####################

# Set US time format
set-environment -g LC_TIME en_US.UTF-8

# Set true color
# set-option -sa terminal-overrides ",xterm*:Tc"
set -as terminal-overrides ',xterm-256color*:XT'

# Refresh status every 5 seconds (Default is 15)
set-option -g status-interval 5

# vim motions in various modes (copy-mode, select-session, etc)
set-window-option -g mode-keys vi
# make Prefix + Esc enter copy mode
unbind [
bind Escape copy-mode

# Enable more key combinations
set -g xterm-keys on

# Enable pleb mode
set -g mouse on

# Do i need to explain this?
set-option -g status-position top

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1

# Set prefix to Ctrl+space
unbind C-b
set -g prefix C-space
bind C-space send-prefix



####################
### KEY BINDINGS ###
####################

# Move panes with Alt+Ctrl+h/j/k/l
bind -n M-C-h swap-pane -t '{left-of}'
bind -n M-C-j swap-pane -D
bind -n M-C-k swap-pane -U
bind -n M-C-l swap-pane -t '{right-of}'

# Split horizontally to Alt+s
unbind-key '"'
bind -n M-s split-window -v -c "#{pane_current_path}"
# Split vertically to Alt+v
unbind-key %
bind -n M-v split-window -h -c "#{pane_current_path}" 

# Kill pane with Alt+q
bind -n M-q confirm-before -p "Kill pane #P? (y/n)" kill-pane

# Bind Alt+m to maximize (zoom) pane
bind -n M-m resize-pane -Z


# Navigate prev/next window with Ctrl+h/l
bind -n M-[ previous-window
bind -n M-] next-window

# Move window left/right with Ctrl+Shift+h/l
bind -n M-\{ swap-window -d -t:-1
bind -n M-\} swap-window -d -t:+1

# Bind Ctrl+1 … Ctrl+0 to windows 1–10
bind-key -n M-1 selectw -t 1
bind-key -n M-2 selectw -t 2
bind-key -n M-3 selectw -t 3
bind-key -n M-4 selectw -t 4
bind-key -n M-5 selectw -t 5
bind-key -n M-6 selectw -t 6
bind-key -n M-7 selectw -t 7
bind-key -n M-8 selectw -t 8
bind-key -n M-9 selectw -t 9
bind-key -n M-0 selectw -t 10

# Rename window with Alt+r
bind-key -n M-r command-prompt -I "#W" "rename-window '%%'"

# New window with Alt+n
# bind-key -n M-n new-window -c "#{pane_current_path}"
bind-key -n M-n new-window -c "#{pane_current_path}" \;\
  run-shell "tmux rename-window \"$(basename '#{pane_current_path}')\""


# Kill window with Alt+w
bind -n M-w confirm-before -p "Kill window #W? (y/n)" kill-window



##############
### PUGINS ###
##############

# Plugin manager
set -g @plugin 'tmux-plugins/tpm'
# Sets sensible defaults
set -g @plugin 'tmux-plugins/tmux-sensible'

# Navigate in/out of vim & tmux
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @vim_navigator_mapping_left "M-h"
set -g @vim_navigator_mapping_down "M-j"
set -g @vim_navigator_mapping_up "M-k"
set -g @vim_navigator_mapping_right "M-l"

# Resize in/out of vim & tmux
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# set -g @plugin 'RyanMillerC/better-vim-tmux-resizer'
bind-key -n M-H if-shell "$is_vim" "send-keys M-H" "resize-pane -L 4"
bind-key -n M-J if-shell "$is_vim" "send-keys M-J" "resize-pane -D 2"
bind-key -n M-K if-shell "$is_vim" "send-keys M-K" "resize-pane -U 2"
bind-key -n M-L if-shell "$is_vim" "send-keys M-L" "resize-pane -R 4"
bind-key -T copy-mode-vi M-H resize-pane -L 4
bind-key -T copy-mode-vi M-J resize-pane -D 2
bind-key -T copy-mode-vi M-K resize-pane -U 2
bind-key -T copy-mode-vi M-L resize-pane -R 4

# Store yank to the clipboard
set -g @plugin 'tmux-plugins/tmux-yank'
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# SessionX - a session manager
set -g @plugin 'omerxx/tmux-sessionx'
set -g @sessionx-bind 'C-space'

# Toggle floating terminal 
# bind-key -n M-f run-shell '
#   if [ "#{session_name}" = "scratch" ] \
#   && [ "#{client_session}" = "scratch" ]; then
#     tmux detach-client
#   else
#     tmux display-popup \
#       -w 80% -h 80% \
#       -E "tmux attach-session -t scratch || tmux new-session -ds scratch"
#   fi
# '



#############
### THEME ###
#############

### Basic status bar setup ###
set -g status on
set -g status-style "bg=default,fg=#bdae93"
set -g status-justify left
set -g status-left ""
set -g status-right ""
set -g window-status-separator ""

set -g automatic-rename on
set -g allow-rename off

### Inactive windows ###
set -g window-status-style "bg=default,fg=#bdae93"
set -g window-status-format \
  "#[fg=#bdae93,bg=default] #I#[fg=#bdae93,bg=default] #{?\
#{==:#{window_name},#{pane_current_command}},\
#(basename \"#{pane_current_path}\"),\
#{window_name}} #[default]"

### Active window ###
set -g window-status-current-style "bg=default,fg=#bdae93"
set -g window-status-current-format \
  "#[fg=#ebdbb2,bg=#504945] #I #{?\
#{==:#{window_name},#{pane_current_command}},\
#(basename \"#{pane_current_path}\"),\
#{window_name}} #[default]"

### Status tray ###
# make sure there's enough room
set -g status-right-length 100

set -g status-right "\
%a %d %b #[bold]%H:%M#[nobold] \
#[fg=#665c54]❘#[default] #(battery_percentage) \
#[fg=#665c54]❘#[default] #(keyboard_layout) \
#[fg=#665c54]❘#[default] 󰆍 #{s|^\\$||:session_id}:#{session_name} \
"

# tmux UI colors
set-option -g mode-style "bg=#928374,fg=#1d2021,bold" # session select, copy, etc
set-option -g message-style "fg=#bdae93,bg=default" # messages in status bar



# Run the plugins
run '~/.tmux/plugins/tpm/tpm'

